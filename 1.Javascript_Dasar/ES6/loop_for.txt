Looping for di Javascript
Looping atau perulangan adalah konsep pemrograman yang memungkinkan kita menjalankan blok kode secara berulang kali. Ini sangat berguna untuk menghemat waktu dan baris kode ketika kita perlu melakukan sesuatu berulang-ulang, misalnya iterasi melalui data dalam array.

Di Javascript, terdapat beberapa jenis loop, salah satu yang paling sering digunakan adalah loop for. Loop for ini termasuk kategori counted loop, artinya kita perlu tahu pasti berapa kali perulangan akan dijalankan.

Sintaks Loop for
JavaScript
for (initialization; condition; increment/decrement) {
  // Blok kode yang akan diulang
}
Gunakan kode dengan hati-hati.
content_copy
Mari kita bahas bagian-bagian dari sintaks ini:

Initialization (Inisialisasi): Bagian ini digunakan untuk menginisialisasi variabel counter yang akan digunakan untuk melacak jumlah iterasi loop. Biasanya dimulai dengan nilai awal, misalnya let i = 0.
Condition (Kondisi): Ini adalah ekspresi boolean yang menentukan apakah loop akan terus dijalankan. Loop akan terus berjalan selama kondisi bernilai true.
Increment/Decrement (Penambahan/Pengurangan): Bagian ini digunakan untuk memperbarui nilai counter setelah setiap iterasi loop. Biasanya menggunakan increment (i++) untuk menambah nilai counter atau decrement (i--) untuk mengurangi nilai counter.
Contoh Loop for
Mari lihat contoh sederhana bagaimana menggunakan loop for untuk mencetak angka dari 1 sampai 5:

JavaScript
for (let i = 1; i <= 5; i++) {
  console.log(i);
}
Gunakan kode dengan hati-hati.
content_copy
Penjelasan:

let i = 1: Inisialisasi variabel counter i dengan nilai awal 1.
i <= 5: Kondisi loop, loop akan terus berjalan selama i lebih kecil atau sama dengan 5.
i++: Increment counter i setelah setiap iterasi loop.
Ketika kode ini dijalankan, output yang akan dihasilkan adalah:

1
2
3
4
5
Modifikasi Loop for
Loop for bisa dimodifikasi untuk berbagai keperluan. Berikut beberapa contoh:

Loop mundur: cukup dengan mengubah kondisi menjadi i >= 0 dan decrement i-- pada increment:
JavaScript
for (let i = 5; i >= 0; i--) {
  console.log(i);
}
Gunakan kode dengan hati-hati.
content_copy
Looping array: kita bisa menggunakan loop for untuk mengiterasi elemen-elemen di dalam array:
JavaScript
let fruits = ["apple", "banana", "orange"];

for (let i = 0; i < fruits.length; i++) {
  console.log(fruits[i]);
}
Gunakan kode dengan hati-hati.
content_copy
Di contoh ini, kita menggunakan properti length dari array untuk mengetahui jumlah elemen di dalam array.

Dengan memahami loop for, kamu bisa membuat program Javascript yang lebih efisien dan ringkas untuk melakukan tugas-tugas berulang.